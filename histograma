{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled1.ipynb",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/acgracias70/modelos-distribuicao/blob/master/histograma\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gjnc6BvQPdVC",
        "colab_type": "code",
        "outputId": "b4f548af-2950-4379-b565-a3ddae3ca7e1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 313
        }
      },
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "base = [50,60,55,52,53,54,55,60,62,51,52,60]\n",
        "h = np.histogram(base, bins = 'auto')\n",
        "print(h)\n",
        "plt.hist(base, bins = 'auto')\n",
        "plt.title('Dados')\n",
        "plt.ylabel('FrequÃªncia')\n",
        "plt.xlabel('Valores')\n",
        "plt.show()\n"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(array([4, 2, 2, 0, 4]), array([50. , 52.4, 54.8, 57.2, 59.6, 62. ]))\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nLf8fLAQCd/fgP4MAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wNzy9HRGVxiH",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "z1VL9xoiVyBP",
        "colab_type": "text"
      },
      "source": [
        ""
      ]
    }
  ]
}